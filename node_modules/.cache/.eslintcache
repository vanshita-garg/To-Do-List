[{"E:\\vscode work\\ReactJs\\to-do-list\\src\\index.js":"1","E:\\vscode work\\ReactJs\\to-do-list\\src\\reportWebVitals.js":"2","E:\\vscode work\\ReactJs\\to-do-list\\src\\App.js":"3","E:\\vscode work\\ReactJs\\to-do-list\\src\\components\\TodoList.js":"4","E:\\vscode work\\ReactJs\\to-do-list\\src\\components\\Card.js":"5","E:\\vscode work\\ReactJs\\to-do-list\\src\\modals\\EditTask.js":"6","E:\\vscode work\\ReactJs\\to-do-list\\src\\modals\\CreateTask.js":"7"},{"size":535,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":301,"mtime":1689792555467,"results":"11","hashOfConfig":"9"},{"size":1865,"mtime":1689794103142,"results":"12","hashOfConfig":"9"},{"size":1991,"mtime":1689798024644,"results":"13","hashOfConfig":"9"},{"size":1900,"mtime":1689792759232,"results":"14","hashOfConfig":"9"},{"size":1753,"mtime":1689792723745,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"1y79z2h",{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"19"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"19"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"19"},"E:\\vscode work\\ReactJs\\to-do-list\\src\\index.js",[],[],[],"E:\\vscode work\\ReactJs\\to-do-list\\src\\reportWebVitals.js",[],[],"E:\\vscode work\\ReactJs\\to-do-list\\src\\App.js",["40"],[],"import logo from './logo.svg';\nimport './App.css';\nimport TodoList from './components/TodoList'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'font-awesome/css/font-awesome.min.css'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;","E:\\vscode work\\ReactJs\\to-do-list\\src\\components\\TodoList.js",[],[],"E:\\vscode work\\ReactJs\\to-do-list\\src\\components\\Card.js",[],[],"E:\\vscode work\\ReactJs\\to-do-list\\src\\modals\\EditTask.js",["41"],[],"import React, { useState , useEffect} from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nconst EditTaskPopup = ({modal, toggle, updateTask, taskObj}) => {\r\n    const [taskName, setTaskName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n    const handleChange = (e) => {\r\n        \r\n        const {name, value} = e.target\r\n\r\n        if(name === \"taskName\"){\r\n            setTaskName(value)\r\n        }else{\r\n            setDescription(value)\r\n        }\r\n\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTaskName(taskObj.Name)\r\n        setDescription(taskObj.Description)\r\n    },[])\r\n\r\n    const handleUpdate = (e) => {\r\n        e.preventDefault();\r\n        let tempObj = {}\r\n        tempObj['Name'] = taskName\r\n        tempObj['Description'] = description\r\n        updateTask(tempObj)\r\n    }\r\n\r\n    return (\r\n        <Modal isOpen={modal} toggle={toggle}>\r\n            <ModalHeader toggle={toggle}>Update Task</ModalHeader>\r\n            <ModalBody>\r\n            \r\n                    <div className = \"form-group\">\r\n                        <label>Task Name</label>\r\n                        <input type=\"text\" className = \"form-control\" value = {taskName} onChange = {handleChange} name = \"taskName\"/>\r\n                    </div>\r\n                    <div className = \"form-group\">\r\n                        <label>Description</label>\r\n                        <textarea rows = \"5\" className = \"form-control\" value = {description} onChange = {handleChange} name = \"description\"></textarea>\r\n                    </div>\r\n                \r\n            </ModalBody>\r\n            <ModalFooter>\r\n            <Button color=\"primary\" onClick={handleUpdate}>Update</Button>{' '}\r\n            <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n            </ModalFooter>\r\n      </Modal>\r\n    );\r\n};\r\n\r\nexport default EditTaskPopup;","E:\\vscode work\\ReactJs\\to-do-list\\src\\modals\\CreateTask.js",[],[],{"ruleId":"42","severity":1,"message":"43","line":1,"column":8,"nodeType":"44","messageId":"45","endLine":1,"endColumn":12},{"ruleId":"46","severity":1,"message":"47","line":24,"column":7,"nodeType":"48","endLine":24,"endColumn":9,"suggestions":"49"},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'taskObj.Description' and 'taskObj.Name'. Either include them or remove the dependency array. If 'setTaskName' needs the current value of 'taskObj.Name', you can also switch to useReducer instead of useState and read 'taskObj.Name' in the reducer.","ArrayExpression",["50"],{"desc":"51","fix":"52"},"Update the dependencies array to be: [taskObj.Description, taskObj.Name]",{"range":"53","text":"54"},[651,653],"[taskObj.Description, taskObj.Name]"]