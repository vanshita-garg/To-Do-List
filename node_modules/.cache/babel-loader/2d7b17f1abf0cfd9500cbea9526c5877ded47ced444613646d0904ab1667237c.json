{"ast":null,"code":"var _jsxFileName = \"E:\\\\vscode work\\\\ReactJs\\\\to-do-list\\\\src\\\\modals\\\\EditTask.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditTaskPopup = ({\n  modal,\n  toggle,\n  updateTask,\n  taskObj\n}) => {\n  _s();\n  const [taskName, setTaskName] = useState('');\n  const [description, setDescription] = useState('');\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === \"taskName\") {\n      setTaskName(value);\n    } else {\n      setDescription(value);\n    }\n  };\n  useEffect(() => {\n    setTaskName(taskObj.Name);\n    setDescription(taskObj.Description);\n  }, []);\n  const handleUpdate = e => {\n    e.preventDefault();\n    let tempObj = {};\n    tempObj['Name'] = taskName;\n    tempObj['Description'] = description;\n    updateTask(tempObj);\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: modal,\n    toggle: toggle,\n    children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n      toggle: toggle,\n      children: \"Update Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Task Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: taskName,\n          onChange: handleChange,\n          name: \"taskName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"5\",\n          className: \"form-control\",\n          value: description,\n          onChange: handleChange,\n          name: \"description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        onClick: handleUpdate,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n        color: \"secondary\",\n        onClick: toggle,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(EditTaskPopup, \"b4Hnd14jJ9vnQOhTXdim/AJWE8M=\");\n_c = EditTaskPopup;\nexport default EditTaskPopup;\nvar _c;\n$RefreshReg$(_c, \"EditTaskPopup\");","map":{"version":3,"names":["React","useState","useEffect","Button","Modal","ModalHeader","ModalBody","ModalFooter","jsxDEV","_jsxDEV","EditTaskPopup","modal","toggle","updateTask","taskObj","_s","taskName","setTaskName","description","setDescription","handleChange","e","name","value","target","Name","Description","handleUpdate","preventDefault","tempObj","isOpen","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","onChange","rows","color","onClick","_c","$RefreshReg$"],"sources":["E:/vscode work/ReactJs/to-do-list/src/modals/EditTask.js"],"sourcesContent":["import React, { useState , useEffect} from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nconst EditTaskPopup = ({modal, toggle, updateTask, taskObj}) => {\r\n    const [taskName, setTaskName] = useState('');\r\n    const [description, setDescription] = useState('');\r\n\r\n    const handleChange = (e) => {\r\n        \r\n        const {name, value} = e.target\r\n\r\n        if(name === \"taskName\"){\r\n            setTaskName(value)\r\n        }else{\r\n            setDescription(value)\r\n        }\r\n\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        setTaskName(taskObj.Name)\r\n        setDescription(taskObj.Description)\r\n    },[])\r\n\r\n    const handleUpdate = (e) => {\r\n        e.preventDefault();\r\n        let tempObj = {}\r\n        tempObj['Name'] = taskName\r\n        tempObj['Description'] = description\r\n        updateTask(tempObj)\r\n    }\r\n\r\n    return (\r\n        <Modal isOpen={modal} toggle={toggle}>\r\n            <ModalHeader toggle={toggle}>Update Task</ModalHeader>\r\n            <ModalBody>\r\n            \r\n                    <div className = \"form-group\">\r\n                        <label>Task Name</label>\r\n                        <input type=\"text\" className = \"form-control\" value = {taskName} onChange = {handleChange} name = \"taskName\"/>\r\n                    </div>\r\n                    <div className = \"form-group\">\r\n                        <label>Description</label>\r\n                        <textarea rows = \"5\" className = \"form-control\" value = {description} onChange = {handleChange} name = \"description\"></textarea>\r\n                    </div>\r\n                \r\n            </ModalBody>\r\n            <ModalFooter>\r\n            <Button color=\"primary\" onClick={handleUpdate}>Update</Button>{' '}\r\n            <Button color=\"secondary\" onClick={toggle}>Cancel</Button>\r\n            </ModalFooter>\r\n      </Modal>\r\n    );\r\n};\r\n\r\nexport default EditTaskPopup;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}